---

- name: InfluxDB package is available
  copy:
    src: influxdb_1.2.4_amd64.deb
    dest: /root/influxdb_1.2.4_amd64.deb

- name: InfluxDB is installed
  apt:
    deb: /root/influxdb_1.2.4_amd64.deb
    state: present

- name: InfluxDB directory for tasks status exists
  file:
    path: /root/influxdb-tasks
    state: directory
    mode: 0700

- name: InfluxDB service is started and enabled
  service:
    name: influxdb
    state: started
    enabled: yes

- name: InfluxDB is up
  wait_for:
    port: 8086

- name: InfluxDB admin user exists
  shell: >
    influx
    -execute {{item.query|quote}} && touch /root/influxdb-tasks/{{item.name}}.done
  args:
    creates: /root/influxdb-tasks/{{item.name}}.done
  with_items:
  - name: user-admin-create
    query: >-
      CREATE USER admin
      WITH PASSWORD '{{ influxdb_admin_password | escape_influxdb }}'
      WITH ALL PRIVILEGES

- name: InfluxDB configuration is installed
  template:
    src: influxdb.conf
    dest: /etc/influxdb/influxdb.conf
  notify: Restart InfluxDB

- meta: flush_handlers

- name: InfluxDB is up
  wait_for:
    port: 8086

- name: InfluxDB database and users for Telegraf exist
  shell: >
    influx
    -username admin -password {{influxdb_admin_password|quote}}
    -execute {{item.query|quote}} && touch /root/influxdb-tasks/{{item.name}}.done
  args:
    creates: /root/influxdb-tasks/{{item.name}}.done
  with_items:
  - name: db-telegraf-create
    query: CREATE DATABASE telegraf
  - name: user-telegraf-create
    query: CREATE USER telegraf WITH PASSWORD '{{ influxdb_telegraf_password | escape_influxdb }}'
  - name: user-telegraf-grant
    query: GRANT WRITE ON telegraf TO telegraf
  - name: user-grafana-create
    query: CREATE USER grafana WITH PASSWORD '{{ influxdb_grafana_password | escape_influxdb }}'
  - name: user-grafana-grant
    query: GRANT READ ON telegraf TO grafana
